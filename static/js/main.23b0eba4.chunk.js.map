{"version":3,"sources":["components/Searchbar/Searchbar.jsx","services/pixabay-api.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["Searchbar","state","searchImageName","handleImageChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","submit","toast","error","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","fetchImages","page","fetch","then","response","ok","json","ImageGalleryItem","image","webformatURL","tags","onModalOpen","onClick","src","alt","Button","onBtnClick","LoaderSpinner","role","color","height","width","timeout","Modal","handleKeyDown","keyCode","onModalClose","handleBackdropClick","target","window","addEventListener","removeEventListener","activeImg","largeImageURL","Status","ImageGallery","images","status","showModal","loading","lastPage","loadImages","setTimeout","hits","total","Error","catch","toggleModal","prevProps","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","message","map","id","Loader","App","handleFormSubmit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23b0eba4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    searchImageName: '',\n  };\n\n  handleImageChange = e => {\n    this.setState({ searchImageName: e.currentTarget.value.toLowerCase() });\n  };\n\n  // при сабмите формы\n  handleSubmit = e => {\n    const { searchImageName } = this.state;\n\n    e.preventDefault();\n\n    // trim - слева и справа обрезает пробелы у строк\n    if (searchImageName.trim() === '') {\n      //  return toast.error('What picture do you need?');\n      toast.error('What picture do you need?');\n      return;\n    }\n\n    this.props.submit(this.state.searchImageName);\n    this.setState({ searchImageName: '' });\n  };\n\n  render() {\n    const { searchImageName } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        {/* onSubmit - регистрация на событии сабмита на встроенном компоненте form */}\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchImageName}\n            onChange={this.handleImageChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n","function fetchImages(searchImageName, page) {\n  const API_KEY = '22935349-f238c1b9d1a1a29229f76f105';\n\n  return fetch(\n    `https://pixabay.com/api/?q=${searchImageName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return response;\n  });\n}\n\nexport default fetchImages;\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({\n  image: { webformatURL, tags },\n  image,\n  onModalOpen,\n}) => (\n  <li className=\"ImageGalleryItem\" onClick={() => onModalOpen(image)}>\n    <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n  </li>\n);\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string,\n    tags: PropTypes.string,\n  }).isRequired,\n  onModalOpen: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onBtnClick }) => (\n  <button type=\"button\" className=\"Button\" onClick={onBtnClick}>\n    Load more...\n  </button>\n);\nexport default Button;\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst LoaderSpinner = () => (\n  <div role=\"alert\" className=\"loader\">\n    <Loader\n      type=\"MutatingDots\"\n      color=\"#3f51b5\"\n      height={100}\n      width={100}\n      timeout={2000}\n    />\n  </div>\n);\nexport default LoaderSpinner;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n  handleKeyDown = e => {\n    if (e.keyCode === 27) {\n      this.props.onModalClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onModalClose();\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    const {\n      activeImg: { largeImageURL, tags },\n    } = this.props;\n\n    return (\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={largeImageURL} alt={tags} className=\"modalImg\" />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Modal;\n\nModal.propTypes = {\n  onModalClose: PropTypes.func.isRequired,\n  activeImg: PropTypes.shape({\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fetchImages from 'services/pixabay-api';\n\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport Button from '../Button/Button';\nimport Loader from '../Loader/Loader';\nimport Modal from '../Modal/Modal';\n\nconst Status = {\n  IDLE: 'idle', //  простой, стоит и ничего не делает\n  PENDING: 'pending', // ожидается выполнение\n  RESOLVED: 'resolved', // выполнилось с результатом хорошо\n  REJECTED: 'rejected', // отклонено\n};\n\nclass ImageGallery extends Component {\n  state = {\n    images: [],\n    error: null,\n    status: Status.IDLE,\n    showModal: false,\n    loading: false,\n\n    activeImg: null,\n    lastPage: 1,\n  };\n\n  // когда компонент обновляется\n  componentDidUpdate(prevProps, prevState) {\n    const { searchImageName } = this.props;\n\n    // всегда нужно делать проверку, потому что может зациклить компонент!\n    // предыдущий пропс имг и следующий(текущий) пропс имг\n    // старый рендет-новый рендер\n    if (prevProps.searchImageName !== searchImageName) {\n      this.setState({ images: [] }, () => {\n        this.loadImages(1);\n      });\n    }\n\n    if (prevState.images !== this.state.images) {\n      setTimeout(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      }, 0);\n    }\n  }\n\n  loadImages = page => {\n    const { images } = this.state;\n    const { searchImageName } = this.props;\n\n    this.setState({ loading: true, lastPage: page });\n    setTimeout(() => {\n      fetchImages(searchImageName, page)\n        .then(({ hits, total }) => {\n          if (!total) {\n            const error = new Error(\n              `There is no picture with ${searchImageName} name, please enter another request`,\n            );\n            this.setState({ error, status: Status.REJECTED });\n          } else {\n            this.setState({\n              images: [...(images || []), ...hits],\n              status: Status.RESOLVED,\n            });\n          }\n        })\n        .catch(error => this.setState({ error, status: Status.REJECTED }));\n\n      this.setState({ loading: false });\n    }, 1000);\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  onModalOpen = activeImg => {\n    this.setState({ activeImg });\n    this.toggleModal();\n  };\n\n  onBtnClick = () => {\n    const { lastPage } = this.state;\n    this.setState({ loading: true });\n    this.loadImages(lastPage + 1);\n  };\n\n  render() {\n    const { images, error, status, showModal, loading, activeImg } = this.state;\n\n    if (status === Status.IDLE) {\n      return <div className=\"errorMessage\">Please enter your request</div>;\n    }\n\n    // if (status === Status.PENDING) {\n    //   return <Loader />;\n    // }\n\n    if (status === Status.REJECTED) {\n      return <h1>{error.message}</h1>;\n    }\n\n    if (status === Status.RESOLVED) {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            {images.map(image => (\n              <ImageGalleryItem\n                key={`image-item-image-${image.id}`}\n                onModalOpen={this.onModalOpen}\n                // webformatURL={image.webformatURL}\n                // tags={image.tags}\n                // largeImageURL={image.largeImageURL}\n                // {...image}\n                image={image}\n              />\n            ))}\n          </ul>\n\n          {loading && <Loader />}\n          <Button onBtnClick={this.onBtnClick} />\n\n          {showModal && (\n            <Modal onModalClose={this.toggleModal} activeImg={activeImg} />\n          )}\n        </>\n      );\n    }\n  }\n}\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  searchImageName: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    searchImageName: '',\n  };\n\n  handleFormSubmit = searchImageName => {\n    this.setState({ searchImageName });\n  };\n\n  render() {\n    const { searchImageName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <ToastContainer />\n\n        {/* в Searchbar передаю проп submit(имя пропса), куда я передаю ссылку на метод handleFormSubmit */}\n        <Searchbar submit={this.handleFormSubmit} />\n        <ImageGallery searchImageName={searchImageName} />\n      </div>\n    );\n  }\n}\n\n//PureComponent и shouldComponentUpdate\n\nexport default App;\n\n// --------------------\n// API - bk\n\n// const fn = a => {\n//   return console.log(a);\n// };\n// fn('2');\n// fn('a');\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}